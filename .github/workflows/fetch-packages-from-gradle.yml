name: Update Port Blueprints

on:
  workflow_dispatch:
    inputs:
      gradle_file_path:
        description: "Path to the Gradle file"
        required: true
        default: /build.gradle

jobs:
  update-port-blueprints:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Read Gradle file content
        id: read-gradle
        uses: juliangruber/read-file-action@v1
        with:
          path: ${{ github.event.inputs.gradle_path }}

      - name: Extract packages and versions
        id: parse-packages
        run: |
          echo "Parsing Gradle file..."
          gradle_content="${{ steps.read-gradle.outputs.content }}"
          packages=$(echo "$gradle_content" | grep -oP 'implementation\s+["\']\K[^"\']+' | awk -F':' '{printf "{\"identifier\": \"%s:%s\", \"blueprint\": \"package\", \"properties\": {\"package\": \"%s:%s\", \"version\": \"%s\"}},", $1, $2, $1, $2, $3}' | jq -s '.')
          echo "::set-output name=packages::$packages"
        env:
          GRADLE_CONTENT: ${{ steps.read-gradle.outputs.content }}

      - name: Bulk Upsert Packages
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: BULK_UPSERT
          blueprint: package
          entities: ${{ steps.parse-packages.outputs.packages }}

      - name: Update Service Relations in Port
        uses: port-labs/port-github-action@v1
        with:
          clientId: ${{ secrets.CLIENT_ID }}
          clientSecret: ${{ secrets.CLIENT_SECRET }}
          baseUrl: https://api.getport.io
          operation: PATCH
          entity: ${{ github.repository }}
          blueprint: service
          properties: |
            {
              "relations": {
                "packages": ${{ steps.parse-packages.outputs.packages }}
              }
            }
